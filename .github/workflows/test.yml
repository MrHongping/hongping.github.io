name: My-Frist-Github-Actions

on:
  push:
    branches:
      - master

# permissions:
#   contents: write

# concurrency:
#   group: gh-pages-workflow
#   cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Setup NPM
        run: |
          NPM_VERSION=$(jq -r .engines.npm package.json)
          NPM_VERSION=${NPM_VERSION/\^/}
          if [ "$(npm --version)" != "$NPM_VERSION" ]; then
            npm install -g npm@$NPM_VERSION && npm --version
          else
            echo "NPM version is same as package.json engines.npm"
          fi

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm ci

      - name: Test before production
        run: npm test

      - name: Build tool
        run: npm run build
        env:
          NODE_ENV: production

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/app:latest
